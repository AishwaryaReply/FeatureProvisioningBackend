{
  "swagger": "2.0",
  "host": "host",
  "basePath": "/",
  "info": {
    "version": "v1.0",
    "title": "FeatureProvisioningAPI",
    "description": "List of APIs to perform operation on feature provisioning"
  },
  "schemes": [
    "https"
  ],
  "definitions": {
    "Feature": {
      "type": "object",
      "required": [
        "code",
        "description"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "FeatureWithChannels": {
      "type": "object",
      "required": [
        "code",
        "description",
        "channels"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel"
          }
        }
      }
    },
    "Channel": {
      "type": "object",
      "required": [
        "code",
        "description"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "NewConfigurationRule": {
      "type": "object",
      "required": [
        "feature",
        "region"
      ],
      "properties": {
        "feature": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "market": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "modelYear": {
          "type": "number"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "NewVehicleGroup": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "VehicleGroup": {
      "type": "object",
      "required": [
        "id",
        "description",
        "vin"
      ],
      "properties": {
        "id": {
          "type": "number"
        },
        "description": {
          "type": "string"
        },
        "vin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetFeatureResponse": {
      "type": "object",
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureWithChannels"
          }
        }
      },
      "example": {
        "features": [
          {
            "code": "XXX",
            "description": "Feature XXX",
            "channels": [
              {
                "code": "GMA",
                "description": "Global Mobile App"
              }
            ]
          }
        ]
      }
    },
    "DeleteResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "example": {
        "message": "deleted"
      }
    },
    "PostResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "example": {
        "message": "inserted"
      }
    },
    "Router400ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Bad Request"
          ]
        },
        "message": {
          "type": "string",
          "description": "Missing/Invalid Parameter in Request"
        }
      }
    },
    "Router401ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Unauthorized"
          ]
        },
        "message": {
          "type": "string",
          "description": "Error message the possible values can be - User not authorized"
        }
      }
    },
    "Router403ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Not Found"
          ]
        },
        "message": {
          "type": "string",
          "description": "description of the error response"
        }
      }
    },
    "Router404ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "System Exception"
          ]
        },
        "message": {
          "type": "string",
          "description": "description of the error response, values can be - Resource Not Found"
        }
      }
    },
    "Router500ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Bad Gateway"
          ]
        },
        "message": {
          "type": "string",
          "description": "description of the error response, values can be - Internal Server Error"
        }
      }
    },
    "Router502ErrorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "name": {
          "type": "string",
          "enum": [
            "Bad Gateway"
          ]
        },
        "message": {
          "type": "string",
          "description": "Description of the error message - possible values can be Proxy Integration Failed"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-api-key",
      "in": "header"
    },
    "sigv4": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "x-amazon-apigateway-authtype": "awsSigv4"
    }
  },
  "x-amazon-apigateway-request-validators": {
    "Validate body, query string parameters, and headers": {
      "validateRequestParameters": true,
      "validateRequestBody": true
    }
  },
  "paths": {
    "/v1/featureProvisioning/feature": {
      "get": {
        "tags": [
          "Feature"
        ],
        "summary": "Get the list of features.",
        "description": "This API returns the list of features.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "description": "code of the feature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "description": "description of the feature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "channel",
            "description": "channel of the feature",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/GetFeatureResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Feature"
        ],
        "summary": "Insert a feature.",
        "description": "This API insert a new feature.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "insert a feature.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/featureProvisioning/feature/{code}": {
      "delete": {
        "tags": [
          "Feature"
        ],
        "summary": "Delete a specific feature.",
        "description": "This API delete a specific feature.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "description": "code of the feature",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/featureProvisioning/feature/{code}/vehicleGroup/{id}": {
      "post": {
        "tags": [
          "Feature"
        ],
        "summary": "Insert a specific vehicle group to a feature.",
        "description": "This API insert a specific vehicle group to a feature.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "description": "code of the feature",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "identifier of the vehicle group",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Feature"
        ],
        "summary": "Remove a specific vehicle group from a feature.",
        "description": "This API remove a specific vehicle group from a feature.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "description": "code of the feature",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "identifier of the vehicle group",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/featureProvisioning/feature/{code}/rule": {
      "post": {
        "tags": [
          "Feature"
        ],
        "summary": "Add a specific rule to a feature.",
        "description": "This API add a rule group to a feature.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "description": "code of the feature",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "insert a rule.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewConfigurationRule"
            }
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/featureProvisioning/feature/{code}/rule/{id}": {
      "delete": {
        "tags": [
          "Feature"
        ],
        "summary": "Remove a specific rule from a feature.",
        "description": "This API remove a rule group from a feature.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "description": "code of the feature",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "identifier of the rule",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/featureProvisioning/vehicleGroup": {
      "post": {
        "tags": [
          "Vehicle Group"
        ],
        "summary": "Insert a vehicle group.",
        "description": "This API insert a new vehicle group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "insert a feature.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewVehicleGroup"
            }
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/featureProvisioning/vehicleGroup/{id}": {
      "delete": {
        "tags": [
          "Vehicle Group"
        ],
        "summary": "Delete a specific vehicle group.",
        "description": "This API delete a specific vehicle group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "identifier of the vehicle group",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      }
    },
    "/v1/featureProvisioning/vehicleGroup/{id}/vehicle/{vin}": {
      "post": {
        "tags": [
          "Vehicle Group"
        ],
        "summary": "Add a vehicle to a vehicle group.",
        "description": "This API add a vehicle to a vehicle group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "identifier of the vehicle group",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vin",
            "description": "vehicle identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/PostResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vehicle Group"
        ],
        "summary": "Remove a vin from a specific vehicle group.",
        "description": "This API Remove a vin from a specific vehicle group.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "identifier of the vehicle group",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "vin",
            "description": "vehicle identifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-clientapp-name",
            "description": "Name of the Client application",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-clientapp-version",
            "description": "Version of the client applications software",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "content-type",
            "description": "application/json ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "API key for the Service ",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientrequestid",
            "description": "To be generated by Client (Last 10 digits of uid_epoch_6digit random)",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "Locale",
            "description": "Locale of user. Coded according to ISO-639 (e.g. “en”) and optionally extended by a country code (e.g. “en_US”).  ",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-device-id",
            "description": "An identifier that uniquely identifies the client device, or calling system like IMEI code. optional for webapp",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-originator-type",
            "description": "The originating clients type: app, web ,server",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/DeleteResponse"
            }
          },
          "400": {
            "description": "400 response",
            "schema": {
              "$ref": "#/definitions/Router400ErrorResponse"
            }
          },
          "401": {
            "description": "401 response",
            "schema": {
              "$ref": "#/definitions/Router401ErrorResponse"
            }
          },
          "403": {
            "description": "403 response",
            "schema": {
              "$ref": "#/definitions/Router403ErrorResponse"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/Router500ErrorResponse"
            }
          },
          "502": {
            "description": "502 response",
            "schema": {
              "$ref": "#/definitions/Router502ErrorResponse"
            }
          }
        }
      }
    }
  }
}